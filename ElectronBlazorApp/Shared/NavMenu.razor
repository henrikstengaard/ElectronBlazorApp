@using ElectronNET.API
@using System.Diagnostics
@using System.IO
@using ElectronBlazorApp.Data
@using ElectronNET.API.Entities

@inject AppState _appState;

<MudMenu Label="File" Variant="Variant.Outlined" Dense="true">
    <MudMenuItem OnClick="NewFile">New file</MudMenuItem>
    <MudMenuItem OnClick="OpenFile">Open file</MudMenuItem>
    <MudMenuItem OnClick="SaveFile">Save file</MudMenuItem>
    <MudMenuItem OnClick="Quit">Quit</MudMenuItem>
</MudMenu>

@code {
    private Task Quit()
    {
        if (!HybridSupport.IsElectronActive)
        {
            return Task.CompletedTask;
        }
        var mainWindow = Electron.WindowManager.BrowserWindows.FirstOrDefault();
        if (mainWindow == null)
        {
            return Task.CompletedTask;
        }
        mainWindow.Close();
        mainWindow.Destroy();
        return Task.CompletedTask;
    }

    private Task NewFile()
    {
        _appState.Path = string.Empty;
        _appState.Content = string.Empty;
        _appState.NotifyStateChanged();
        return Task.CompletedTask;
    }

    private async Task OpenFile()
    {
        var mainWindow = Electron.WindowManager.BrowserWindows.First();
        var options = new OpenDialogOptions
        {
            Title = "Open file",
            Filters = new FileFilter[]
            {
                new FileFilter { Name = "Text files", Extensions = new string[] {"txt" } }
            }
        };
        var path = (await 
            Electron.Dialog.ShowOpenDialogAsync(mainWindow, options)).FirstOrDefault();
        if (string.IsNullOrEmpty(path))
        {
            return;
        }
        _appState.Path = path;
        _appState.Content = await File.ReadAllTextAsync(path);
        _appState.NotifyStateChanged();
    }
    
    private async Task SaveFile()
    {
        var mainWindow = Electron.WindowManager.BrowserWindows.First();
        var options = new SaveDialogOptions
        {
            Title = "Save file",
            Filters = new FileFilter[]
            {
                new FileFilter { Name = "Text files", Extensions = new string[] {"txt" } }
            }
        };
        var path = (await 
            Electron.Dialog.ShowSaveDialogAsync(mainWindow, options));
        if (string.IsNullOrEmpty(path))
        {
            return;
        }
        _appState.Path = path;
        await File.WriteAllTextAsync(_appState.Path, _appState.Content);
        _appState.NotifyStateChanged();
    }
}